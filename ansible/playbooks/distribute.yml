- hosts: earthrise
  tasks:
  - name: ensure base packages are installed
    become: true
    apt: name={{ item }} state=installed
    with_items:
      - openjdk-8-jdk
      - whois
      - curl
      - htop
  - name: ensure parent log directory for application exists
    become: true
    file:
      path: "/var/log/jenova"
      state: directory
      mode: 0775
  - name: ensure log shipper is installed
    become: true
    apt:
      deb: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.2.4-amd64.deb
  - name: stop log shipper if it is running
    become: true
    service:
      name: filebeat
      state: stopped
  - name: copy filebeat configuration file
    become: true
    copy:
      src: "{{playbook_dir}}/../files/filebeat.yml"
      dest: "/etc/filebeat/filebeat.yml"
  - name: start log shipper that was installed
    become: true
    service:
      name: filebeat
      state: started
      enabled: true
  - name: ensure appropriate group exists
    become: true
    group:
      name: earthrise
      state: present
  - name: ensure appropriate user exists
    become: true
    user:
      name: earthrise
      password: '$6$i37xBhfw$sovtpYT/XfbjezSU1wxKUWo/WwICusd47S.vMoArqK/RkXZzxWxynMsKA9YqjBmt/T88ACgPzrgx18WRP0zBD0'
      group: earthrise
  - name: ensure application specific log directory exists
    become: true
    file:
      path: "/var/log/jenova/earthrise"
      state: directory
      owner: earthrise
      group: earthrise
      mode: 0775
  - name: create artifacts directory where the package will be copied into
    become: true
    file:
      path: "/opt/earthrise_tmp"
      state: directory
  - name: upload package binary into artifacts directory
    become: true
    copy:
      src: "{{playbook_dir}}/../../earthrise/build/distributions/earthrise-{{version}}.deb"
      dest: "/opt/earthrise_tmp/earthrise_{{version}}.deb"
  - name: check if service being installed exists from before
    become: true
    stat:
      path: "/etc/init.d/earthrise"
    register: service_status
  - name: if service being installed exists, then make sure it is stopped
    become: true
    service:
      name: earthrise
      state: stopped
    when: service_status.stat.exists
  - name: uninstall package of interest if already installed from before
    become: true
    apt:
      name: earthrise
      state: absent
  - name: install uploaded package
    become: true
    apt:
      deb: "/opt/earthrise_tmp/earthrise_{{version}}.deb"
  - name: start service that was installed
    become: true
    service:
      name: earthrise
      state: started
      enabled: true
  - name: clean up artifacts directory
    become: true
    file:
      path: "/opt/earthrise_tmp"
      state: absent

- hosts: omnidrive
  tasks:
  - name: ensure base packages are installed
    become: true
    apt: name={{ item }} state=installed
    with_items:
      - openjdk-8-jdk
      - whois
      - curl
      - htop
  - name: ensure parent log directory for application exists
    become: true
    file:
      path: "/var/log/jenova"
      state: directory
      mode: 0775
  - name: ensure log shipper is installed
    become: true
    apt:
      deb: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.2.4-amd64.deb
  - name: stop log shipper if it is running
    become: true
    service:
      name: filebeat
      state: stopped
  - name: copy filebeat configuration file
    become: true
    copy:
      src: "{{playbook_dir}}/../files/filebeat.yml"
      dest: "/etc/filebeat/filebeat.yml"
  - name: start log shipper that was installed
    become: true
    service:
      name: filebeat
      state: started
      enabled: true
  - name: ensure appropriate group exists
    become: true
    group:
      name: omnidrive
      state: present
  - name: ensure appropriate user exists
    become: true
    user:
      name: omnidrive
      password: '$6$0xaZLZHv$KgV4ysGCZyNYb1rw0C7uiEedjYAHNxgUW7YLtrYweRqJp0fpyWj8E2XwyxX8kCuhlSgOVSjp6AR7hzOfozwtY1'
      group: omnidrive
  - name: ensure application specific log directory exists
    become: true
    file:
      path: "/var/log/jenova/omnidrive"
      state: directory
      owner: omnidrive
      group: omnidrive
      mode: 0775
  - name: create artifacts directory where the package will be copied into
    become: true
    file:
      path: "/opt/omnidrive_tmp"
      state: directory
  - name: upload package binary into artifacts directory
    become: true
    copy:
      src: "{{playbook_dir}}/../../omnidrive/build/distributions/omnidrive-{{version}}.deb"
      dest: "/opt/omnidrive_tmp/omnidrive_{{version}}.deb"
  - name: check if service being installed exists from before
    become: true
    stat:
      path: "/etc/init.d/omnidrive"
    register: service_status
  - name: if service being installed exists, then make sure it is stopped
    become: true
    service:
      name: omnidrive
      state: stopped
    when: service_status.stat.exists
  - name: uninstall package of interest if already installed from before
    become: true
    apt:
      name: omnidrive
      state: absent
  - name: install uploaded package
    become: true
    apt:
      deb: "/opt/omnidrive_tmp/omnidrive_{{version}}.deb"
  - name: start service that was installed
    become: true
    service:
      name: omnidrive
      state: started
      enabled: true
  - name: clean up artifacts directory
    become: true
    file:
      path: "/opt/omnidrive_tmp"
      state: absent

- hosts: gatekeeper
  tasks:
  - name: ensure base packages are installed
    become: true
    apt: name={{ item }} state=installed
    with_items:
      - openjdk-8-jdk
      - whois
      - curl
      - htop
  - name: ensure parent log directory for application exists
    become: true
    file:
      path: "/var/log/jenova"
      state: directory
      mode: 0775
  - name: ensure log shipper is installed
    become: true
    apt:
      deb: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.2.4-amd64.deb
  - name: stop log shipper if it is running
    become: true
    service:
      name: filebeat
      state: stopped
  - name: copy filebeat configuration file
    become: true
    copy:
      src: "{{playbook_dir}}/../files/filebeat.yml"
      dest: "/etc/filebeat/filebeat.yml"
  - name: start log shipper that was installed
    become: true
    service:
      name: filebeat
      state: started
      enabled: true
  - name: ensure appropriate group exists
    become: true
    group:
      name: gatekeeper
      state: present
  - name: ensure appropriate user exists
    become: true
    user:
      name: gatekeeper
      password: '$6$OTx6q0i.Vkcs$n/P46yuW.GBC5U4NA8Meb2kSzYzT859XPvr6.FR0gcN/h2fVGACcIyP2Wfi9KaO4yVqvpamuUMWI8TBmKGBR2.'
      group: gatekeeper
  - name: ensure application specific log directory exists
    become: true
    file:
      path: "/var/log/jenova/gatekeeper"
      state: directory
      owner: gatekeeper
      group: gatekeeper
      mode: 0775
  - name: create artifacts directory where the package will be copied into
    become: true
    file:
      path: "/opt/gatekeeper_tmp"
      state: directory
  - name: upload package binary into artifacts directory
    become: true
    copy:
      src: "{{playbook_dir}}/../../gatekeeper/build/distributions/gatekeeper-{{version}}.deb"
      dest: "/opt/gatekeeper_tmp/gatekeeper_{{version}}.deb"
  - name: check if service being installed exists from before
    become: true
    stat:
      path: "/etc/init.d/gatekeeper"
    register: service_status
  - name: if service being installed exists, then make sure it is stopped
    become: true
    service:
      name: gatekeeper
      state: stopped
    when: service_status.stat.exists
  - name: uninstall package of interest if already installed from before
    become: true
    apt:
      name: gatekeeper
      state: absent
  - name: install uploaded package
    become: true
    apt:
      deb: "/opt/gatekeeper_tmp/gatekeeper_{{version}}.deb"
  - name: start service that was installed
    become: true
    service:
      name: gatekeeper
      state: started
      enabled: true
  - name: clean up artifacts directory
    become: true
    file:
      path: "/opt/gatekeeper_tmp"
      state: absent

- hosts: justitia
  tasks:
  - name: ensure base packages are installed
    become: true
    apt: name={{ item }} state=installed
    with_items:
    - openjdk-8-jdk
    - whois
    - curl
    - htop
  - name: ensure parent log directory for application exists
    become: true
    file:
      path: "/var/log/jenova"
      state: directory
      mode: 0775
  - name: ensure log shipper is installed
    become: true
    apt:
      deb: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.2.4-amd64.deb
  - name: stop log shipper if it is running
    become: true
    service:
      name: filebeat
      state: stopped
  - name: copy filebeat configuration file
    become: true
    copy:
      src: "{{playbook_dir}}/../files/filebeat.yml"
      dest: "/etc/filebeat/filebeat.yml"
  - name: start log shipper that was installed
    become: true
    service:
      name: filebeat
      state: started
      enabled: true
  - name: ensure appropriate group exists
    become: true
    group:
      name: justitia
      state: present
  - name: ensure appropriate user exists
    become: true
    user:
      name: justitia
      password: '$6$Fwa4zmAFiHD/lXF$5jh1nMBJNcB9L0X39igbGvmMOxUGRjHJjJCt0BwL4RtniWzGaLcBipgDf40QObjf1h14.SnYEHlLRy2eN/hse1'
      group: justitia
  - name: ensure application specific log directory exists
    become: true
    file:
      path: "/var/log/jenova/justitia"
      state: directory
      owner: justitia
      group: justitia
      mode: 0775
  - name: create artifacts directory where the package will be copied into
    become: true
    file:
      path: "/opt/justitia_tmp"
      state: directory
  - name: upload package binary into artifacts directory
    become: true
    copy:
      src: "{{playbook_dir}}/../../justitia/build/distributions/justitia-{{version}}.deb"
      dest: "/opt/justitia_tmp/justitia_{{version}}.deb"
  - name: check if service being installed exists from before
    become: true
    stat:
      path: "/etc/init.d/justitia"
    register: service_status
  - name: if service being installed exists, then make sure it is stopped
    become: true
    service:
      name: justitia
      state: stopped
    when: service_status.stat.exists
  - name: uninstall package of interest if already installed from before
    become: true
    apt:
      name: justitia
      state: absent
  - name: install uploaded package
    become: true
    apt:
      deb: "/opt/justitia_tmp/justitia_{{version}}.deb"
  - name: start service that was installed
    become: true
    service:
      name: justitia
      state: started
      enabled: true
  - name: clean up artifacts directory
    become: true
    file:
      path: "/opt/justitia_tmp"
      state: absent

- hosts: hyperion
  tasks:
  - name: ensure base packages are installed
    become: true
    apt: name={{ item }} state=installed
    with_items:
    - openjdk-8-jdk
    - whois
    - curl
    - htop
  - name: ensure parent log directory for application exists
    become: true
    file:
      path: "/var/log/jenova"
      state: directory
      mode: 0775
  - name: ensure log shipper is installed
    become: true
    apt:
      deb: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.2.4-amd64.deb
  - name: stop log shipper if it is running
    become: true
    service:
      name: filebeat
      state: stopped
  - name: copy filebeat configuration file
    become: true
    copy:
      src: "{{playbook_dir}}/../files/filebeat.yml"
      dest: "/etc/filebeat/filebeat.yml"
  - name: start log shipper that was installed
    become: true
    service:
      name: filebeat
      state: started
      enabled: true
  - name: ensure appropriate group exists
    become: true
    group:
      name: hyperion
      state: present
  - name: ensure appropriate user exists
    become: true
    user:
      name: hyperion
      password: '$6$ypok1b8uUY$gdsZTDBzWwh3hhgk6vxSg7muDLNsPD.T1LC.66dbkJW.1vDFXpiI9ZDmjDSjr3CyDNM7MnpTHfBI0gWs28dsH0'
      group: hyperion
  - name: ensure application specific log directory exists
    become: true
    file:
      path: "/var/log/jenova/hyperion"
      state: directory
      owner: hyperion
      group: hyperion
      mode: 0775
  - name: create artifacts directory where the package will be copied into
    become: true
    file:
      path: "/opt/hyperion_tmp"
      state: directory
  - name: upload package binary into artifacts directory
    become: true
    copy:
      src: "{{playbook_dir}}/../../hyperion/build/distributions/hyperion-{{version}}.deb"
      dest: "/opt/hyperion_tmp/hyperion_{{version}}.deb"
  - name: check if service being installed exists from before
    become: true
    stat:
      path: "/etc/init.d/hyperion"
    register: service_status
  - name: if service being installed exists, then make sure it is stopped
    become: true
    service:
      name: hyperion
      state: stopped
    when: service_status.stat.exists
  - name: uninstall package of interest if already installed from before
    become: true
    apt:
      name: hyperion
      state: absent
  - name: install uploaded package
    become: true
    apt:
      deb: "/opt/hyperion_tmp/hyperion_{{version}}.deb"
  - name: start service that was installed
    become: true
    service:
      name: hyperion
      state: started
      enabled: true
  - name: clean up artifacts directory
    become: true
    file:
      path: "/opt/hyperion_tmp"
      state: absent