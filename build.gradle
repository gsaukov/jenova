group "com.pro.jenova"

subprojects {

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.springframework.boot:spring-boot-starter-test:${springVersion}"
    }

    repositories {
        maven {
            url "${nexusUrl}/repository/maven-public/"
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${nexusUrl}/repository/maven-releases/") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
                snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots/") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
            }
        }
    }

}

task showVersion {
    doLast {
        println getVersion()
    }
}

def getVersion() {
    def branchName = "git rev-parse --abbrev-ref HEAD".execute().getText().trim()
    def commitHash = "git rev-parse --short HEAD".execute().getText().trim()
    def dateAndTime = new Date().format("yyyyMMddHHmmss");

    if (branchName.startsWith("release/")) {
        return branchName.substring("release/".length())
    }

    return branchName.concat("-").concat(dateAndTime).concat("-").concat(commitHash).concat("-SNAPSHOT")
}